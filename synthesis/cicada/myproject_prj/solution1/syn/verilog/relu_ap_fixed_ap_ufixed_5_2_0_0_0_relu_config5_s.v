// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module relu_ap_fixed_ap_ufixed_5_2_0_0_0_relu_config5_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        data_5_V_read,
        data_6_V_read,
        data_7_V_read,
        data_8_V_read,
        data_9_V_read,
        data_10_V_read,
        data_11_V_read,
        data_12_V_read,
        data_13_V_read,
        data_14_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [19:0] data_0_V_read;
input  [19:0] data_1_V_read;
input  [19:0] data_2_V_read;
input  [19:0] data_3_V_read;
input  [19:0] data_4_V_read;
input  [19:0] data_5_V_read;
input  [19:0] data_6_V_read;
input  [19:0] data_7_V_read;
input  [19:0] data_8_V_read;
input  [19:0] data_9_V_read;
input  [19:0] data_10_V_read;
input  [19:0] data_11_V_read;
input  [19:0] data_12_V_read;
input  [19:0] data_13_V_read;
input  [19:0] data_14_V_read;
output  [4:0] ap_return_0;
output  [4:0] ap_return_1;
output  [4:0] ap_return_2;
output  [4:0] ap_return_3;
output  [4:0] ap_return_4;
output  [4:0] ap_return_5;
output  [4:0] ap_return_6;
output  [4:0] ap_return_7;
output  [4:0] ap_return_8;
output  [4:0] ap_return_9;
output  [4:0] ap_return_10;
output  [4:0] ap_return_11;
output  [4:0] ap_return_12;
output  [4:0] ap_return_13;
output  [4:0] ap_return_14;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] ap_return_0;
reg[4:0] ap_return_1;
reg[4:0] ap_return_2;
reg[4:0] ap_return_3;
reg[4:0] ap_return_4;
reg[4:0] ap_return_5;
reg[4:0] ap_return_6;
reg[4:0] ap_return_7;
reg[4:0] ap_return_8;
reg[4:0] ap_return_9;
reg[4:0] ap_return_10;
reg[4:0] ap_return_11;
reg[4:0] ap_return_12;
reg[4:0] ap_return_13;
reg[4:0] ap_return_14;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1;
wire   [0:0] tmp_1_fu_196_p3;
wire   [4:0] zext_ln415_fu_204_p1;
wire   [4:0] trunc_ln_fu_178_p4;
wire   [4:0] add_ln415_fu_208_p2;
wire   [0:0] tmp_2_fu_214_p3;
wire   [0:0] tmp_fu_188_p3;
wire   [0:0] xor_ln416_fu_222_p2;
wire   [7:0] p_Result_2_fu_234_p4;
wire   [0:0] and_ln416_fu_228_p2;
wire   [0:0] icmp_ln879_fu_244_p2;
wire   [0:0] icmp_ln768_fu_250_p2;
wire   [0:0] select_ln777_fu_256_p3;
wire   [0:0] icmp_ln1494_fu_172_p2;
wire   [4:0] select_ln340_fu_264_p3;
wire   [0:0] tmp_4_fu_304_p3;
wire   [4:0] zext_ln415_1_fu_312_p1;
wire   [4:0] trunc_ln708_1_fu_286_p4;
wire   [4:0] add_ln415_1_fu_316_p2;
wire   [0:0] tmp_5_fu_322_p3;
wire   [0:0] tmp_3_fu_296_p3;
wire   [0:0] xor_ln416_1_fu_330_p2;
wire   [7:0] p_Result_2_1_fu_342_p4;
wire   [0:0] and_ln416_1_fu_336_p2;
wire   [0:0] icmp_ln879_1_fu_352_p2;
wire   [0:0] icmp_ln768_1_fu_358_p2;
wire   [0:0] select_ln777_1_fu_364_p3;
wire   [0:0] icmp_ln1494_1_fu_280_p2;
wire   [4:0] select_ln340_1_fu_372_p3;
wire   [0:0] tmp_7_fu_412_p3;
wire   [4:0] zext_ln415_2_fu_420_p1;
wire   [4:0] trunc_ln708_2_fu_394_p4;
wire   [4:0] add_ln415_2_fu_424_p2;
wire   [0:0] tmp_8_fu_430_p3;
wire   [0:0] tmp_6_fu_404_p3;
wire   [0:0] xor_ln416_2_fu_438_p2;
wire   [7:0] p_Result_2_2_fu_450_p4;
wire   [0:0] and_ln416_2_fu_444_p2;
wire   [0:0] icmp_ln879_2_fu_460_p2;
wire   [0:0] icmp_ln768_2_fu_466_p2;
wire   [0:0] select_ln777_2_fu_472_p3;
wire   [0:0] icmp_ln1494_2_fu_388_p2;
wire   [4:0] select_ln340_2_fu_480_p3;
wire   [0:0] tmp_10_fu_520_p3;
wire   [4:0] zext_ln415_3_fu_528_p1;
wire   [4:0] trunc_ln708_3_fu_502_p4;
wire   [4:0] add_ln415_3_fu_532_p2;
wire   [0:0] tmp_11_fu_538_p3;
wire   [0:0] tmp_9_fu_512_p3;
wire   [0:0] xor_ln416_3_fu_546_p2;
wire   [7:0] p_Result_2_3_fu_558_p4;
wire   [0:0] and_ln416_3_fu_552_p2;
wire   [0:0] icmp_ln879_3_fu_568_p2;
wire   [0:0] icmp_ln768_3_fu_574_p2;
wire   [0:0] select_ln777_3_fu_580_p3;
wire   [0:0] icmp_ln1494_3_fu_496_p2;
wire   [4:0] select_ln340_3_fu_588_p3;
wire   [0:0] tmp_13_fu_628_p3;
wire   [4:0] zext_ln415_4_fu_636_p1;
wire   [4:0] trunc_ln708_4_fu_610_p4;
wire   [4:0] add_ln415_4_fu_640_p2;
wire   [0:0] tmp_14_fu_646_p3;
wire   [0:0] tmp_12_fu_620_p3;
wire   [0:0] xor_ln416_4_fu_654_p2;
wire   [7:0] p_Result_2_4_fu_666_p4;
wire   [0:0] and_ln416_4_fu_660_p2;
wire   [0:0] icmp_ln879_4_fu_676_p2;
wire   [0:0] icmp_ln768_4_fu_682_p2;
wire   [0:0] select_ln777_4_fu_688_p3;
wire   [0:0] icmp_ln1494_4_fu_604_p2;
wire   [4:0] select_ln340_4_fu_696_p3;
wire   [0:0] tmp_16_fu_736_p3;
wire   [4:0] zext_ln415_5_fu_744_p1;
wire   [4:0] trunc_ln708_5_fu_718_p4;
wire   [4:0] add_ln415_5_fu_748_p2;
wire   [0:0] tmp_17_fu_754_p3;
wire   [0:0] tmp_15_fu_728_p3;
wire   [0:0] xor_ln416_5_fu_762_p2;
wire   [7:0] p_Result_2_5_fu_774_p4;
wire   [0:0] and_ln416_5_fu_768_p2;
wire   [0:0] icmp_ln879_5_fu_784_p2;
wire   [0:0] icmp_ln768_5_fu_790_p2;
wire   [0:0] select_ln777_5_fu_796_p3;
wire   [0:0] icmp_ln1494_5_fu_712_p2;
wire   [4:0] select_ln340_5_fu_804_p3;
wire   [0:0] tmp_19_fu_844_p3;
wire   [4:0] zext_ln415_6_fu_852_p1;
wire   [4:0] trunc_ln708_6_fu_826_p4;
wire   [4:0] add_ln415_6_fu_856_p2;
wire   [0:0] tmp_20_fu_862_p3;
wire   [0:0] tmp_18_fu_836_p3;
wire   [0:0] xor_ln416_6_fu_870_p2;
wire   [7:0] p_Result_2_6_fu_882_p4;
wire   [0:0] and_ln416_6_fu_876_p2;
wire   [0:0] icmp_ln879_6_fu_892_p2;
wire   [0:0] icmp_ln768_6_fu_898_p2;
wire   [0:0] select_ln777_6_fu_904_p3;
wire   [0:0] icmp_ln1494_6_fu_820_p2;
wire   [4:0] select_ln340_6_fu_912_p3;
wire   [0:0] tmp_22_fu_952_p3;
wire   [4:0] zext_ln415_7_fu_960_p1;
wire   [4:0] trunc_ln708_7_fu_934_p4;
wire   [4:0] add_ln415_7_fu_964_p2;
wire   [0:0] tmp_23_fu_970_p3;
wire   [0:0] tmp_21_fu_944_p3;
wire   [0:0] xor_ln416_7_fu_978_p2;
wire   [7:0] p_Result_2_7_fu_990_p4;
wire   [0:0] and_ln416_7_fu_984_p2;
wire   [0:0] icmp_ln879_7_fu_1000_p2;
wire   [0:0] icmp_ln768_7_fu_1006_p2;
wire   [0:0] select_ln777_7_fu_1012_p3;
wire   [0:0] icmp_ln1494_7_fu_928_p2;
wire   [4:0] select_ln340_7_fu_1020_p3;
wire   [0:0] tmp_25_fu_1060_p3;
wire   [4:0] zext_ln415_8_fu_1068_p1;
wire   [4:0] trunc_ln708_8_fu_1042_p4;
wire   [4:0] add_ln415_8_fu_1072_p2;
wire   [0:0] tmp_26_fu_1078_p3;
wire   [0:0] tmp_24_fu_1052_p3;
wire   [0:0] xor_ln416_8_fu_1086_p2;
wire   [7:0] p_Result_2_8_fu_1098_p4;
wire   [0:0] and_ln416_8_fu_1092_p2;
wire   [0:0] icmp_ln879_8_fu_1108_p2;
wire   [0:0] icmp_ln768_8_fu_1114_p2;
wire   [0:0] select_ln777_8_fu_1120_p3;
wire   [0:0] icmp_ln1494_8_fu_1036_p2;
wire   [4:0] select_ln340_8_fu_1128_p3;
wire   [0:0] tmp_28_fu_1168_p3;
wire   [4:0] zext_ln415_9_fu_1176_p1;
wire   [4:0] trunc_ln708_9_fu_1150_p4;
wire   [4:0] add_ln415_9_fu_1180_p2;
wire   [0:0] tmp_29_fu_1186_p3;
wire   [0:0] tmp_27_fu_1160_p3;
wire   [0:0] xor_ln416_9_fu_1194_p2;
wire   [7:0] p_Result_2_9_fu_1206_p4;
wire   [0:0] and_ln416_9_fu_1200_p2;
wire   [0:0] icmp_ln879_9_fu_1216_p2;
wire   [0:0] icmp_ln768_9_fu_1222_p2;
wire   [0:0] select_ln777_9_fu_1228_p3;
wire   [0:0] icmp_ln1494_9_fu_1144_p2;
wire   [4:0] select_ln340_9_fu_1236_p3;
wire   [0:0] tmp_31_fu_1276_p3;
wire   [4:0] zext_ln415_10_fu_1284_p1;
wire   [4:0] trunc_ln708_s_fu_1258_p4;
wire   [4:0] add_ln415_10_fu_1288_p2;
wire   [0:0] tmp_32_fu_1294_p3;
wire   [0:0] tmp_30_fu_1268_p3;
wire   [0:0] xor_ln416_10_fu_1302_p2;
wire   [7:0] p_Result_2_s_fu_1314_p4;
wire   [0:0] and_ln416_10_fu_1308_p2;
wire   [0:0] icmp_ln879_10_fu_1324_p2;
wire   [0:0] icmp_ln768_10_fu_1330_p2;
wire   [0:0] select_ln777_10_fu_1336_p3;
wire   [0:0] icmp_ln1494_10_fu_1252_p2;
wire   [4:0] select_ln340_10_fu_1344_p3;
wire   [0:0] tmp_34_fu_1384_p3;
wire   [4:0] zext_ln415_11_fu_1392_p1;
wire   [4:0] trunc_ln708_10_fu_1366_p4;
wire   [4:0] add_ln415_11_fu_1396_p2;
wire   [0:0] tmp_35_fu_1402_p3;
wire   [0:0] tmp_33_fu_1376_p3;
wire   [0:0] xor_ln416_11_fu_1410_p2;
wire   [7:0] p_Result_2_10_fu_1422_p4;
wire   [0:0] and_ln416_11_fu_1416_p2;
wire   [0:0] icmp_ln879_11_fu_1432_p2;
wire   [0:0] icmp_ln768_11_fu_1438_p2;
wire   [0:0] select_ln777_11_fu_1444_p3;
wire   [0:0] icmp_ln1494_11_fu_1360_p2;
wire   [4:0] select_ln340_11_fu_1452_p3;
wire   [0:0] tmp_37_fu_1492_p3;
wire   [4:0] zext_ln415_12_fu_1500_p1;
wire   [4:0] trunc_ln708_11_fu_1474_p4;
wire   [4:0] add_ln415_12_fu_1504_p2;
wire   [0:0] tmp_38_fu_1510_p3;
wire   [0:0] tmp_36_fu_1484_p3;
wire   [0:0] xor_ln416_12_fu_1518_p2;
wire   [7:0] p_Result_2_11_fu_1530_p4;
wire   [0:0] and_ln416_12_fu_1524_p2;
wire   [0:0] icmp_ln879_12_fu_1540_p2;
wire   [0:0] icmp_ln768_12_fu_1546_p2;
wire   [0:0] select_ln777_12_fu_1552_p3;
wire   [0:0] icmp_ln1494_12_fu_1468_p2;
wire   [4:0] select_ln340_12_fu_1560_p3;
wire   [0:0] tmp_40_fu_1600_p3;
wire   [4:0] zext_ln415_13_fu_1608_p1;
wire   [4:0] trunc_ln708_12_fu_1582_p4;
wire   [4:0] add_ln415_13_fu_1612_p2;
wire   [0:0] tmp_41_fu_1618_p3;
wire   [0:0] tmp_39_fu_1592_p3;
wire   [0:0] xor_ln416_13_fu_1626_p2;
wire   [7:0] p_Result_2_12_fu_1638_p4;
wire   [0:0] and_ln416_13_fu_1632_p2;
wire   [0:0] icmp_ln879_13_fu_1648_p2;
wire   [0:0] icmp_ln768_13_fu_1654_p2;
wire   [0:0] select_ln777_13_fu_1660_p3;
wire   [0:0] icmp_ln1494_13_fu_1576_p2;
wire   [4:0] select_ln340_13_fu_1668_p3;
wire   [0:0] tmp_43_fu_1708_p3;
wire   [4:0] zext_ln415_14_fu_1716_p1;
wire   [4:0] trunc_ln708_13_fu_1690_p4;
wire   [4:0] add_ln415_14_fu_1720_p2;
wire   [0:0] tmp_44_fu_1726_p3;
wire   [0:0] tmp_42_fu_1700_p3;
wire   [0:0] xor_ln416_14_fu_1734_p2;
wire   [7:0] p_Result_2_13_fu_1746_p4;
wire   [0:0] and_ln416_14_fu_1740_p2;
wire   [0:0] icmp_ln879_14_fu_1756_p2;
wire   [0:0] icmp_ln768_14_fu_1762_p2;
wire   [0:0] select_ln777_14_fu_1768_p3;
wire   [0:0] icmp_ln1494_14_fu_1684_p2;
wire   [4:0] select_ln340_14_fu_1776_p3;
wire   [4:0] select_ln1494_fu_272_p3;
wire   [4:0] select_ln1494_1_fu_380_p3;
wire   [4:0] select_ln1494_2_fu_488_p3;
wire   [4:0] select_ln1494_3_fu_596_p3;
wire   [4:0] select_ln1494_4_fu_704_p3;
wire   [4:0] select_ln1494_5_fu_812_p3;
wire   [4:0] select_ln1494_6_fu_920_p3;
wire   [4:0] select_ln1494_7_fu_1028_p3;
wire   [4:0] select_ln1494_8_fu_1136_p3;
wire   [4:0] select_ln1494_9_fu_1244_p3;
wire   [4:0] select_ln1494_10_fu_1352_p3;
wire   [4:0] select_ln1494_11_fu_1460_p3;
wire   [4:0] select_ln1494_12_fu_1568_p3;
wire   [4:0] select_ln1494_13_fu_1676_p3;
wire   [4:0] select_ln1494_14_fu_1784_p3;
reg   [4:0] ap_return_0_preg;
reg   [4:0] ap_return_1_preg;
reg   [4:0] ap_return_2_preg;
reg   [4:0] ap_return_3_preg;
reg   [4:0] ap_return_4_preg;
reg   [4:0] ap_return_5_preg;
reg   [4:0] ap_return_6_preg;
reg   [4:0] ap_return_7_preg;
reg   [4:0] ap_return_8_preg;
reg   [4:0] ap_return_9_preg;
reg   [4:0] ap_return_10_preg;
reg   [4:0] ap_return_11_preg;
reg   [4:0] ap_return_12_preg;
reg   [4:0] ap_return_13_preg;
reg   [4:0] ap_return_14_preg;
reg   [0:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_return_0_preg = 5'd0;
#0 ap_return_1_preg = 5'd0;
#0 ap_return_2_preg = 5'd0;
#0 ap_return_3_preg = 5'd0;
#0 ap_return_4_preg = 5'd0;
#0 ap_return_5_preg = 5'd0;
#0 ap_return_6_preg = 5'd0;
#0 ap_return_7_preg = 5'd0;
#0 ap_return_8_preg = 5'd0;
#0 ap_return_9_preg = 5'd0;
#0 ap_return_10_preg = 5'd0;
#0 ap_return_11_preg = 5'd0;
#0 ap_return_12_preg = 5'd0;
#0 ap_return_13_preg = 5'd0;
#0 ap_return_14_preg = 5'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 5'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_0_preg <= select_ln1494_fu_272_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 5'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_10_preg <= select_ln1494_10_fu_1352_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 5'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_11_preg <= select_ln1494_11_fu_1460_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 5'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_12_preg <= select_ln1494_12_fu_1568_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 5'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_13_preg <= select_ln1494_13_fu_1676_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 5'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_14_preg <= select_ln1494_14_fu_1784_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 5'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_1_preg <= select_ln1494_1_fu_380_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 5'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_2_preg <= select_ln1494_2_fu_488_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 5'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_3_preg <= select_ln1494_3_fu_596_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 5'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_4_preg <= select_ln1494_4_fu_704_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 5'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_5_preg <= select_ln1494_5_fu_812_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 5'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_6_preg <= select_ln1494_6_fu_920_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 5'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_7_preg <= select_ln1494_7_fu_1028_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 5'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_8_preg <= select_ln1494_8_fu_1136_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 5'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_9_preg <= select_ln1494_9_fu_1244_p3;
        end
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_0 = select_ln1494_fu_272_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_1 = select_ln1494_1_fu_380_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_10 = select_ln1494_10_fu_1352_p3;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_11 = select_ln1494_11_fu_1460_p3;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_12 = select_ln1494_12_fu_1568_p3;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_13 = select_ln1494_13_fu_1676_p3;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_14 = select_ln1494_14_fu_1784_p3;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_2 = select_ln1494_2_fu_488_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_3 = select_ln1494_3_fu_596_p3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_4 = select_ln1494_4_fu_704_p3;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_5 = select_ln1494_5_fu_812_p3;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_6 = select_ln1494_6_fu_920_p3;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_7 = select_ln1494_7_fu_1028_p3;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_8 = select_ln1494_8_fu_1136_p3;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_9 = select_ln1494_9_fu_1244_p3;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln415_10_fu_1288_p2 = (zext_ln415_10_fu_1284_p1 + trunc_ln708_s_fu_1258_p4);

assign add_ln415_11_fu_1396_p2 = (zext_ln415_11_fu_1392_p1 + trunc_ln708_10_fu_1366_p4);

assign add_ln415_12_fu_1504_p2 = (zext_ln415_12_fu_1500_p1 + trunc_ln708_11_fu_1474_p4);

assign add_ln415_13_fu_1612_p2 = (zext_ln415_13_fu_1608_p1 + trunc_ln708_12_fu_1582_p4);

assign add_ln415_14_fu_1720_p2 = (zext_ln415_14_fu_1716_p1 + trunc_ln708_13_fu_1690_p4);

assign add_ln415_1_fu_316_p2 = (zext_ln415_1_fu_312_p1 + trunc_ln708_1_fu_286_p4);

assign add_ln415_2_fu_424_p2 = (zext_ln415_2_fu_420_p1 + trunc_ln708_2_fu_394_p4);

assign add_ln415_3_fu_532_p2 = (zext_ln415_3_fu_528_p1 + trunc_ln708_3_fu_502_p4);

assign add_ln415_4_fu_640_p2 = (zext_ln415_4_fu_636_p1 + trunc_ln708_4_fu_610_p4);

assign add_ln415_5_fu_748_p2 = (zext_ln415_5_fu_744_p1 + trunc_ln708_5_fu_718_p4);

assign add_ln415_6_fu_856_p2 = (zext_ln415_6_fu_852_p1 + trunc_ln708_6_fu_826_p4);

assign add_ln415_7_fu_964_p2 = (zext_ln415_7_fu_960_p1 + trunc_ln708_7_fu_934_p4);

assign add_ln415_8_fu_1072_p2 = (zext_ln415_8_fu_1068_p1 + trunc_ln708_8_fu_1042_p4);

assign add_ln415_9_fu_1180_p2 = (zext_ln415_9_fu_1176_p1 + trunc_ln708_9_fu_1150_p4);

assign add_ln415_fu_208_p2 = (zext_ln415_fu_204_p1 + trunc_ln_fu_178_p4);

assign and_ln416_10_fu_1308_p2 = (xor_ln416_10_fu_1302_p2 & tmp_30_fu_1268_p3);

assign and_ln416_11_fu_1416_p2 = (xor_ln416_11_fu_1410_p2 & tmp_33_fu_1376_p3);

assign and_ln416_12_fu_1524_p2 = (xor_ln416_12_fu_1518_p2 & tmp_36_fu_1484_p3);

assign and_ln416_13_fu_1632_p2 = (xor_ln416_13_fu_1626_p2 & tmp_39_fu_1592_p3);

assign and_ln416_14_fu_1740_p2 = (xor_ln416_14_fu_1734_p2 & tmp_42_fu_1700_p3);

assign and_ln416_1_fu_336_p2 = (xor_ln416_1_fu_330_p2 & tmp_3_fu_296_p3);

assign and_ln416_2_fu_444_p2 = (xor_ln416_2_fu_438_p2 & tmp_6_fu_404_p3);

assign and_ln416_3_fu_552_p2 = (xor_ln416_3_fu_546_p2 & tmp_9_fu_512_p3);

assign and_ln416_4_fu_660_p2 = (xor_ln416_4_fu_654_p2 & tmp_12_fu_620_p3);

assign and_ln416_5_fu_768_p2 = (xor_ln416_5_fu_762_p2 & tmp_15_fu_728_p3);

assign and_ln416_6_fu_876_p2 = (xor_ln416_6_fu_870_p2 & tmp_18_fu_836_p3);

assign and_ln416_7_fu_984_p2 = (xor_ln416_7_fu_978_p2 & tmp_21_fu_944_p3);

assign and_ln416_8_fu_1092_p2 = (xor_ln416_8_fu_1086_p2 & tmp_24_fu_1052_p3);

assign and_ln416_9_fu_1200_p2 = (xor_ln416_9_fu_1194_p2 & tmp_27_fu_1160_p3);

assign and_ln416_fu_228_p2 = (xor_ln416_fu_222_p2 & tmp_fu_188_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign icmp_ln1494_10_fu_1252_p2 = (($signed(data_10_V_read) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_11_fu_1360_p2 = (($signed(data_11_V_read) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_12_fu_1468_p2 = (($signed(data_12_V_read) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_13_fu_1576_p2 = (($signed(data_13_V_read) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_14_fu_1684_p2 = (($signed(data_14_V_read) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_1_fu_280_p2 = (($signed(data_1_V_read) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_2_fu_388_p2 = (($signed(data_2_V_read) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_3_fu_496_p2 = (($signed(data_3_V_read) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_4_fu_604_p2 = (($signed(data_4_V_read) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_5_fu_712_p2 = (($signed(data_5_V_read) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_6_fu_820_p2 = (($signed(data_6_V_read) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_7_fu_928_p2 = (($signed(data_7_V_read) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_8_fu_1036_p2 = (($signed(data_8_V_read) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_9_fu_1144_p2 = (($signed(data_9_V_read) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_172_p2 = (($signed(data_0_V_read) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln768_10_fu_1330_p2 = ((p_Result_2_s_fu_1314_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_11_fu_1438_p2 = ((p_Result_2_10_fu_1422_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_12_fu_1546_p2 = ((p_Result_2_11_fu_1530_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_13_fu_1654_p2 = ((p_Result_2_12_fu_1638_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_14_fu_1762_p2 = ((p_Result_2_13_fu_1746_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_1_fu_358_p2 = ((p_Result_2_1_fu_342_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_2_fu_466_p2 = ((p_Result_2_2_fu_450_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_3_fu_574_p2 = ((p_Result_2_3_fu_558_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_4_fu_682_p2 = ((p_Result_2_4_fu_666_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_5_fu_790_p2 = ((p_Result_2_5_fu_774_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_6_fu_898_p2 = ((p_Result_2_6_fu_882_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_7_fu_1006_p2 = ((p_Result_2_7_fu_990_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_8_fu_1114_p2 = ((p_Result_2_8_fu_1098_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_9_fu_1222_p2 = ((p_Result_2_9_fu_1206_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_fu_250_p2 = ((p_Result_2_fu_234_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_10_fu_1324_p2 = ((p_Result_2_s_fu_1314_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln879_11_fu_1432_p2 = ((p_Result_2_10_fu_1422_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln879_12_fu_1540_p2 = ((p_Result_2_11_fu_1530_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln879_13_fu_1648_p2 = ((p_Result_2_12_fu_1638_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln879_14_fu_1756_p2 = ((p_Result_2_13_fu_1746_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_352_p2 = ((p_Result_2_1_fu_342_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_460_p2 = ((p_Result_2_2_fu_450_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln879_3_fu_568_p2 = ((p_Result_2_3_fu_558_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln879_4_fu_676_p2 = ((p_Result_2_4_fu_666_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln879_5_fu_784_p2 = ((p_Result_2_5_fu_774_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln879_6_fu_892_p2 = ((p_Result_2_6_fu_882_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln879_7_fu_1000_p2 = ((p_Result_2_7_fu_990_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln879_8_fu_1108_p2 = ((p_Result_2_8_fu_1098_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln879_9_fu_1216_p2 = ((p_Result_2_9_fu_1206_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_244_p2 = ((p_Result_2_fu_234_p4 == 8'd255) ? 1'b1 : 1'b0);

assign p_Result_2_10_fu_1422_p4 = {{data_11_V_read[19:12]}};

assign p_Result_2_11_fu_1530_p4 = {{data_12_V_read[19:12]}};

assign p_Result_2_12_fu_1638_p4 = {{data_13_V_read[19:12]}};

assign p_Result_2_13_fu_1746_p4 = {{data_14_V_read[19:12]}};

assign p_Result_2_1_fu_342_p4 = {{data_1_V_read[19:12]}};

assign p_Result_2_2_fu_450_p4 = {{data_2_V_read[19:12]}};

assign p_Result_2_3_fu_558_p4 = {{data_3_V_read[19:12]}};

assign p_Result_2_4_fu_666_p4 = {{data_4_V_read[19:12]}};

assign p_Result_2_5_fu_774_p4 = {{data_5_V_read[19:12]}};

assign p_Result_2_6_fu_882_p4 = {{data_6_V_read[19:12]}};

assign p_Result_2_7_fu_990_p4 = {{data_7_V_read[19:12]}};

assign p_Result_2_8_fu_1098_p4 = {{data_8_V_read[19:12]}};

assign p_Result_2_9_fu_1206_p4 = {{data_9_V_read[19:12]}};

assign p_Result_2_fu_234_p4 = {{data_0_V_read[19:12]}};

assign p_Result_2_s_fu_1314_p4 = {{data_10_V_read[19:12]}};

assign select_ln1494_10_fu_1352_p3 = ((icmp_ln1494_10_fu_1252_p2[0:0] === 1'b1) ? select_ln340_10_fu_1344_p3 : 5'd0);

assign select_ln1494_11_fu_1460_p3 = ((icmp_ln1494_11_fu_1360_p2[0:0] === 1'b1) ? select_ln340_11_fu_1452_p3 : 5'd0);

assign select_ln1494_12_fu_1568_p3 = ((icmp_ln1494_12_fu_1468_p2[0:0] === 1'b1) ? select_ln340_12_fu_1560_p3 : 5'd0);

assign select_ln1494_13_fu_1676_p3 = ((icmp_ln1494_13_fu_1576_p2[0:0] === 1'b1) ? select_ln340_13_fu_1668_p3 : 5'd0);

assign select_ln1494_14_fu_1784_p3 = ((icmp_ln1494_14_fu_1684_p2[0:0] === 1'b1) ? select_ln340_14_fu_1776_p3 : 5'd0);

assign select_ln1494_1_fu_380_p3 = ((icmp_ln1494_1_fu_280_p2[0:0] === 1'b1) ? select_ln340_1_fu_372_p3 : 5'd0);

assign select_ln1494_2_fu_488_p3 = ((icmp_ln1494_2_fu_388_p2[0:0] === 1'b1) ? select_ln340_2_fu_480_p3 : 5'd0);

assign select_ln1494_3_fu_596_p3 = ((icmp_ln1494_3_fu_496_p2[0:0] === 1'b1) ? select_ln340_3_fu_588_p3 : 5'd0);

assign select_ln1494_4_fu_704_p3 = ((icmp_ln1494_4_fu_604_p2[0:0] === 1'b1) ? select_ln340_4_fu_696_p3 : 5'd0);

assign select_ln1494_5_fu_812_p3 = ((icmp_ln1494_5_fu_712_p2[0:0] === 1'b1) ? select_ln340_5_fu_804_p3 : 5'd0);

assign select_ln1494_6_fu_920_p3 = ((icmp_ln1494_6_fu_820_p2[0:0] === 1'b1) ? select_ln340_6_fu_912_p3 : 5'd0);

assign select_ln1494_7_fu_1028_p3 = ((icmp_ln1494_7_fu_928_p2[0:0] === 1'b1) ? select_ln340_7_fu_1020_p3 : 5'd0);

assign select_ln1494_8_fu_1136_p3 = ((icmp_ln1494_8_fu_1036_p2[0:0] === 1'b1) ? select_ln340_8_fu_1128_p3 : 5'd0);

assign select_ln1494_9_fu_1244_p3 = ((icmp_ln1494_9_fu_1144_p2[0:0] === 1'b1) ? select_ln340_9_fu_1236_p3 : 5'd0);

assign select_ln1494_fu_272_p3 = ((icmp_ln1494_fu_172_p2[0:0] === 1'b1) ? select_ln340_fu_264_p3 : 5'd0);

assign select_ln340_10_fu_1344_p3 = ((select_ln777_10_fu_1336_p3[0:0] === 1'b1) ? add_ln415_10_fu_1288_p2 : 5'd31);

assign select_ln340_11_fu_1452_p3 = ((select_ln777_11_fu_1444_p3[0:0] === 1'b1) ? add_ln415_11_fu_1396_p2 : 5'd31);

assign select_ln340_12_fu_1560_p3 = ((select_ln777_12_fu_1552_p3[0:0] === 1'b1) ? add_ln415_12_fu_1504_p2 : 5'd31);

assign select_ln340_13_fu_1668_p3 = ((select_ln777_13_fu_1660_p3[0:0] === 1'b1) ? add_ln415_13_fu_1612_p2 : 5'd31);

assign select_ln340_14_fu_1776_p3 = ((select_ln777_14_fu_1768_p3[0:0] === 1'b1) ? add_ln415_14_fu_1720_p2 : 5'd31);

assign select_ln340_1_fu_372_p3 = ((select_ln777_1_fu_364_p3[0:0] === 1'b1) ? add_ln415_1_fu_316_p2 : 5'd31);

assign select_ln340_2_fu_480_p3 = ((select_ln777_2_fu_472_p3[0:0] === 1'b1) ? add_ln415_2_fu_424_p2 : 5'd31);

assign select_ln340_3_fu_588_p3 = ((select_ln777_3_fu_580_p3[0:0] === 1'b1) ? add_ln415_3_fu_532_p2 : 5'd31);

assign select_ln340_4_fu_696_p3 = ((select_ln777_4_fu_688_p3[0:0] === 1'b1) ? add_ln415_4_fu_640_p2 : 5'd31);

assign select_ln340_5_fu_804_p3 = ((select_ln777_5_fu_796_p3[0:0] === 1'b1) ? add_ln415_5_fu_748_p2 : 5'd31);

assign select_ln340_6_fu_912_p3 = ((select_ln777_6_fu_904_p3[0:0] === 1'b1) ? add_ln415_6_fu_856_p2 : 5'd31);

assign select_ln340_7_fu_1020_p3 = ((select_ln777_7_fu_1012_p3[0:0] === 1'b1) ? add_ln415_7_fu_964_p2 : 5'd31);

assign select_ln340_8_fu_1128_p3 = ((select_ln777_8_fu_1120_p3[0:0] === 1'b1) ? add_ln415_8_fu_1072_p2 : 5'd31);

assign select_ln340_9_fu_1236_p3 = ((select_ln777_9_fu_1228_p3[0:0] === 1'b1) ? add_ln415_9_fu_1180_p2 : 5'd31);

assign select_ln340_fu_264_p3 = ((select_ln777_fu_256_p3[0:0] === 1'b1) ? add_ln415_fu_208_p2 : 5'd31);

assign select_ln777_10_fu_1336_p3 = ((and_ln416_10_fu_1308_p2[0:0] === 1'b1) ? icmp_ln879_10_fu_1324_p2 : icmp_ln768_10_fu_1330_p2);

assign select_ln777_11_fu_1444_p3 = ((and_ln416_11_fu_1416_p2[0:0] === 1'b1) ? icmp_ln879_11_fu_1432_p2 : icmp_ln768_11_fu_1438_p2);

assign select_ln777_12_fu_1552_p3 = ((and_ln416_12_fu_1524_p2[0:0] === 1'b1) ? icmp_ln879_12_fu_1540_p2 : icmp_ln768_12_fu_1546_p2);

assign select_ln777_13_fu_1660_p3 = ((and_ln416_13_fu_1632_p2[0:0] === 1'b1) ? icmp_ln879_13_fu_1648_p2 : icmp_ln768_13_fu_1654_p2);

assign select_ln777_14_fu_1768_p3 = ((and_ln416_14_fu_1740_p2[0:0] === 1'b1) ? icmp_ln879_14_fu_1756_p2 : icmp_ln768_14_fu_1762_p2);

assign select_ln777_1_fu_364_p3 = ((and_ln416_1_fu_336_p2[0:0] === 1'b1) ? icmp_ln879_1_fu_352_p2 : icmp_ln768_1_fu_358_p2);

assign select_ln777_2_fu_472_p3 = ((and_ln416_2_fu_444_p2[0:0] === 1'b1) ? icmp_ln879_2_fu_460_p2 : icmp_ln768_2_fu_466_p2);

assign select_ln777_3_fu_580_p3 = ((and_ln416_3_fu_552_p2[0:0] === 1'b1) ? icmp_ln879_3_fu_568_p2 : icmp_ln768_3_fu_574_p2);

assign select_ln777_4_fu_688_p3 = ((and_ln416_4_fu_660_p2[0:0] === 1'b1) ? icmp_ln879_4_fu_676_p2 : icmp_ln768_4_fu_682_p2);

assign select_ln777_5_fu_796_p3 = ((and_ln416_5_fu_768_p2[0:0] === 1'b1) ? icmp_ln879_5_fu_784_p2 : icmp_ln768_5_fu_790_p2);

assign select_ln777_6_fu_904_p3 = ((and_ln416_6_fu_876_p2[0:0] === 1'b1) ? icmp_ln879_6_fu_892_p2 : icmp_ln768_6_fu_898_p2);

assign select_ln777_7_fu_1012_p3 = ((and_ln416_7_fu_984_p2[0:0] === 1'b1) ? icmp_ln879_7_fu_1000_p2 : icmp_ln768_7_fu_1006_p2);

assign select_ln777_8_fu_1120_p3 = ((and_ln416_8_fu_1092_p2[0:0] === 1'b1) ? icmp_ln879_8_fu_1108_p2 : icmp_ln768_8_fu_1114_p2);

assign select_ln777_9_fu_1228_p3 = ((and_ln416_9_fu_1200_p2[0:0] === 1'b1) ? icmp_ln879_9_fu_1216_p2 : icmp_ln768_9_fu_1222_p2);

assign select_ln777_fu_256_p3 = ((and_ln416_fu_228_p2[0:0] === 1'b1) ? icmp_ln879_fu_244_p2 : icmp_ln768_fu_250_p2);

assign tmp_10_fu_520_p3 = data_3_V_read[32'd6];

assign tmp_11_fu_538_p3 = add_ln415_3_fu_532_p2[32'd4];

assign tmp_12_fu_620_p3 = data_4_V_read[32'd11];

assign tmp_13_fu_628_p3 = data_4_V_read[32'd6];

assign tmp_14_fu_646_p3 = add_ln415_4_fu_640_p2[32'd4];

assign tmp_15_fu_728_p3 = data_5_V_read[32'd11];

assign tmp_16_fu_736_p3 = data_5_V_read[32'd6];

assign tmp_17_fu_754_p3 = add_ln415_5_fu_748_p2[32'd4];

assign tmp_18_fu_836_p3 = data_6_V_read[32'd11];

assign tmp_19_fu_844_p3 = data_6_V_read[32'd6];

assign tmp_1_fu_196_p3 = data_0_V_read[32'd6];

assign tmp_20_fu_862_p3 = add_ln415_6_fu_856_p2[32'd4];

assign tmp_21_fu_944_p3 = data_7_V_read[32'd11];

assign tmp_22_fu_952_p3 = data_7_V_read[32'd6];

assign tmp_23_fu_970_p3 = add_ln415_7_fu_964_p2[32'd4];

assign tmp_24_fu_1052_p3 = data_8_V_read[32'd11];

assign tmp_25_fu_1060_p3 = data_8_V_read[32'd6];

assign tmp_26_fu_1078_p3 = add_ln415_8_fu_1072_p2[32'd4];

assign tmp_27_fu_1160_p3 = data_9_V_read[32'd11];

assign tmp_28_fu_1168_p3 = data_9_V_read[32'd6];

assign tmp_29_fu_1186_p3 = add_ln415_9_fu_1180_p2[32'd4];

assign tmp_2_fu_214_p3 = add_ln415_fu_208_p2[32'd4];

assign tmp_30_fu_1268_p3 = data_10_V_read[32'd11];

assign tmp_31_fu_1276_p3 = data_10_V_read[32'd6];

assign tmp_32_fu_1294_p3 = add_ln415_10_fu_1288_p2[32'd4];

assign tmp_33_fu_1376_p3 = data_11_V_read[32'd11];

assign tmp_34_fu_1384_p3 = data_11_V_read[32'd6];

assign tmp_35_fu_1402_p3 = add_ln415_11_fu_1396_p2[32'd4];

assign tmp_36_fu_1484_p3 = data_12_V_read[32'd11];

assign tmp_37_fu_1492_p3 = data_12_V_read[32'd6];

assign tmp_38_fu_1510_p3 = add_ln415_12_fu_1504_p2[32'd4];

assign tmp_39_fu_1592_p3 = data_13_V_read[32'd11];

assign tmp_3_fu_296_p3 = data_1_V_read[32'd11];

assign tmp_40_fu_1600_p3 = data_13_V_read[32'd6];

assign tmp_41_fu_1618_p3 = add_ln415_13_fu_1612_p2[32'd4];

assign tmp_42_fu_1700_p3 = data_14_V_read[32'd11];

assign tmp_43_fu_1708_p3 = data_14_V_read[32'd6];

assign tmp_44_fu_1726_p3 = add_ln415_14_fu_1720_p2[32'd4];

assign tmp_4_fu_304_p3 = data_1_V_read[32'd6];

assign tmp_5_fu_322_p3 = add_ln415_1_fu_316_p2[32'd4];

assign tmp_6_fu_404_p3 = data_2_V_read[32'd11];

assign tmp_7_fu_412_p3 = data_2_V_read[32'd6];

assign tmp_8_fu_430_p3 = add_ln415_2_fu_424_p2[32'd4];

assign tmp_9_fu_512_p3 = data_3_V_read[32'd11];

assign tmp_fu_188_p3 = data_0_V_read[32'd11];

assign trunc_ln708_10_fu_1366_p4 = {{data_11_V_read[11:7]}};

assign trunc_ln708_11_fu_1474_p4 = {{data_12_V_read[11:7]}};

assign trunc_ln708_12_fu_1582_p4 = {{data_13_V_read[11:7]}};

assign trunc_ln708_13_fu_1690_p4 = {{data_14_V_read[11:7]}};

assign trunc_ln708_1_fu_286_p4 = {{data_1_V_read[11:7]}};

assign trunc_ln708_2_fu_394_p4 = {{data_2_V_read[11:7]}};

assign trunc_ln708_3_fu_502_p4 = {{data_3_V_read[11:7]}};

assign trunc_ln708_4_fu_610_p4 = {{data_4_V_read[11:7]}};

assign trunc_ln708_5_fu_718_p4 = {{data_5_V_read[11:7]}};

assign trunc_ln708_6_fu_826_p4 = {{data_6_V_read[11:7]}};

assign trunc_ln708_7_fu_934_p4 = {{data_7_V_read[11:7]}};

assign trunc_ln708_8_fu_1042_p4 = {{data_8_V_read[11:7]}};

assign trunc_ln708_9_fu_1150_p4 = {{data_9_V_read[11:7]}};

assign trunc_ln708_s_fu_1258_p4 = {{data_10_V_read[11:7]}};

assign trunc_ln_fu_178_p4 = {{data_0_V_read[11:7]}};

assign xor_ln416_10_fu_1302_p2 = (tmp_32_fu_1294_p3 ^ 1'd1);

assign xor_ln416_11_fu_1410_p2 = (tmp_35_fu_1402_p3 ^ 1'd1);

assign xor_ln416_12_fu_1518_p2 = (tmp_38_fu_1510_p3 ^ 1'd1);

assign xor_ln416_13_fu_1626_p2 = (tmp_41_fu_1618_p3 ^ 1'd1);

assign xor_ln416_14_fu_1734_p2 = (tmp_44_fu_1726_p3 ^ 1'd1);

assign xor_ln416_1_fu_330_p2 = (tmp_5_fu_322_p3 ^ 1'd1);

assign xor_ln416_2_fu_438_p2 = (tmp_8_fu_430_p3 ^ 1'd1);

assign xor_ln416_3_fu_546_p2 = (tmp_11_fu_538_p3 ^ 1'd1);

assign xor_ln416_4_fu_654_p2 = (tmp_14_fu_646_p3 ^ 1'd1);

assign xor_ln416_5_fu_762_p2 = (tmp_17_fu_754_p3 ^ 1'd1);

assign xor_ln416_6_fu_870_p2 = (tmp_20_fu_862_p3 ^ 1'd1);

assign xor_ln416_7_fu_978_p2 = (tmp_23_fu_970_p3 ^ 1'd1);

assign xor_ln416_8_fu_1086_p2 = (tmp_26_fu_1078_p3 ^ 1'd1);

assign xor_ln416_9_fu_1194_p2 = (tmp_29_fu_1186_p3 ^ 1'd1);

assign xor_ln416_fu_222_p2 = (tmp_2_fu_214_p3 ^ 1'd1);

assign zext_ln415_10_fu_1284_p1 = tmp_31_fu_1276_p3;

assign zext_ln415_11_fu_1392_p1 = tmp_34_fu_1384_p3;

assign zext_ln415_12_fu_1500_p1 = tmp_37_fu_1492_p3;

assign zext_ln415_13_fu_1608_p1 = tmp_40_fu_1600_p3;

assign zext_ln415_14_fu_1716_p1 = tmp_43_fu_1708_p3;

assign zext_ln415_1_fu_312_p1 = tmp_4_fu_304_p3;

assign zext_ln415_2_fu_420_p1 = tmp_7_fu_412_p3;

assign zext_ln415_3_fu_528_p1 = tmp_10_fu_520_p3;

assign zext_ln415_4_fu_636_p1 = tmp_13_fu_628_p3;

assign zext_ln415_5_fu_744_p1 = tmp_16_fu_736_p3;

assign zext_ln415_6_fu_852_p1 = tmp_19_fu_844_p3;

assign zext_ln415_7_fu_960_p1 = tmp_22_fu_952_p3;

assign zext_ln415_8_fu_1068_p1 = tmp_25_fu_1060_p3;

assign zext_ln415_9_fu_1176_p1 = tmp_28_fu_1168_p3;

assign zext_ln415_fu_204_p1 = tmp_1_fu_196_p3;

endmodule //relu_ap_fixed_ap_ufixed_5_2_0_0_0_relu_config5_s

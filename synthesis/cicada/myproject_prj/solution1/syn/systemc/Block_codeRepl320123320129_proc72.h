// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Block_codeRepl320123320129_proc72_HH_
#define _Block_codeRepl320123320129_proc72_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dense_resource_ap_ufixed_ap_fixed_16_5_5_3_0_config6_s.h"

namespace ap_rtl {

struct Block_codeRepl320123320129_proc72 : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<5> > p_read;
    sc_in< sc_lv<5> > p_read1;
    sc_in< sc_lv<5> > p_read2;
    sc_in< sc_lv<5> > p_read3;
    sc_in< sc_lv<5> > p_read4;
    sc_in< sc_lv<5> > p_read5;
    sc_in< sc_lv<5> > p_read6;
    sc_in< sc_lv<5> > p_read7;
    sc_in< sc_lv<5> > p_read8;
    sc_in< sc_lv<5> > p_read9;
    sc_in< sc_lv<5> > p_read10;
    sc_in< sc_lv<5> > p_read11;
    sc_in< sc_lv<5> > p_read12;
    sc_in< sc_lv<5> > p_read13;
    sc_in< sc_lv<5> > p_read14;
    sc_in< sc_lv<128> > link_out_0_V_i;
    sc_out< sc_lv<128> > link_out_0_V_o;
    sc_out< sc_logic > link_out_0_V_o_ap_vld;


    // Module declarations
    Block_codeRepl320123320129_proc72(sc_module_name name);
    SC_HAS_PROCESS(Block_codeRepl320123320129_proc72);

    ~Block_codeRepl320123320129_proc72();

    sc_trace_file* mVcdFile;

    dense_resource_ap_ufixed_ap_fixed_16_5_5_3_0_config6_s* grp_dense_resource_ap_ufixed_ap_fixed_16_5_5_3_0_config6_s_fu_157;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_logic > grp_dense_resource_ap_ufixed_ap_fixed_16_5_5_3_0_config6_s_fu_157_ap_start;
    sc_signal< sc_logic > grp_dense_resource_ap_ufixed_ap_fixed_16_5_5_3_0_config6_s_fu_157_ap_done;
    sc_signal< sc_logic > grp_dense_resource_ap_ufixed_ap_fixed_16_5_5_3_0_config6_s_fu_157_ap_idle;
    sc_signal< sc_logic > grp_dense_resource_ap_ufixed_ap_fixed_16_5_5_3_0_config6_s_fu_157_ap_ready;
    sc_signal< sc_logic > grp_dense_resource_ap_ufixed_ap_fixed_16_5_5_3_0_config6_s_fu_157_ap_start_reg;
    sc_signal< bool > ap_block_state1_ignore_call16;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<128> > p_Result_s_fu_191_p5;
    sc_signal< sc_lv<128> > link_out_0_V_o_preg;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const sc_lv<112> ap_const_lv112_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_77;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_state1();
    void thread_ap_block_state1_ignore_call16();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_dense_resource_ap_ufixed_ap_fixed_16_5_5_3_0_config6_s_fu_157_ap_start();
    void thread_link_out_0_V_o();
    void thread_link_out_0_V_o_ap_vld();
    void thread_p_Result_s_fu_191_p5();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

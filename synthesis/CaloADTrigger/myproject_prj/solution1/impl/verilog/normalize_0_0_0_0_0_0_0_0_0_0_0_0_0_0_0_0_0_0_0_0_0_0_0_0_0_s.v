// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [19:0] p_read;
input  [19:0] p_read1;
input  [19:0] p_read2;
input  [19:0] p_read3;
input  [19:0] p_read4;
input  [19:0] p_read5;
input  [19:0] p_read6;
input  [19:0] p_read7;
input  [19:0] p_read8;
input  [19:0] p_read9;
input  [19:0] p_read10;
input  [19:0] p_read11;
input  [19:0] p_read12;
input  [19:0] p_read13;
input  [19:0] p_read14;
output  [19:0] ap_return_0;
output  [19:0] ap_return_1;
output  [19:0] ap_return_2;
output  [19:0] ap_return_3;
output  [19:0] ap_return_4;
output  [19:0] ap_return_5;
output  [19:0] ap_return_6;
output  [19:0] ap_return_7;
output  [19:0] ap_return_8;
output  [19:0] ap_return_9;
output  [19:0] ap_return_10;
output  [19:0] ap_return_11;
output  [19:0] ap_return_12;
output  [19:0] ap_return_13;
output  [19:0] ap_return_14;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[19:0] ap_return_0;
reg[19:0] ap_return_1;
reg[19:0] ap_return_2;
reg[19:0] ap_return_3;
reg[19:0] ap_return_4;
reg[19:0] ap_return_5;
reg[19:0] ap_return_6;
reg[19:0] ap_return_7;
reg[19:0] ap_return_8;
reg[19:0] ap_return_9;
reg[19:0] ap_return_10;
reg[19:0] ap_return_11;
reg[19:0] ap_return_12;
reg[19:0] ap_return_13;
reg[19:0] ap_return_14;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1;
wire  signed [19:0] sext_ln1118_fu_156_p0;
wire  signed [19:0] trunc_ln1118_fu_160_p0;
wire   [11:0] trunc_ln1118_fu_160_p1;
wire   [21:0] shl_ln_fu_164_p3;
wire  signed [21:0] sext_ln1118_fu_156_p1;
wire   [21:0] sub_ln1118_fu_172_p2;
wire  signed [19:0] sext_ln1118_1_fu_188_p0;
wire  signed [19:0] trunc_ln1118_1_fu_192_p0;
wire   [11:0] trunc_ln1118_1_fu_192_p1;
wire   [21:0] shl_ln1118_1_fu_196_p3;
wire  signed [21:0] sext_ln1118_1_fu_188_p1;
wire   [21:0] sub_ln1118_1_fu_204_p2;
wire  signed [19:0] sext_ln1118_2_fu_220_p0;
wire  signed [19:0] trunc_ln1118_2_fu_224_p0;
wire   [11:0] trunc_ln1118_2_fu_224_p1;
wire   [21:0] shl_ln1118_2_fu_228_p3;
wire  signed [21:0] sext_ln1118_2_fu_220_p1;
wire   [21:0] sub_ln1118_2_fu_236_p2;
wire  signed [19:0] sext_ln1118_3_fu_252_p0;
wire  signed [19:0] trunc_ln1118_3_fu_256_p0;
wire   [11:0] trunc_ln1118_3_fu_256_p1;
wire   [21:0] shl_ln1118_3_fu_260_p3;
wire  signed [21:0] sext_ln1118_3_fu_252_p1;
wire   [21:0] sub_ln1118_3_fu_268_p2;
wire  signed [19:0] sext_ln1118_4_fu_284_p0;
wire  signed [19:0] trunc_ln1118_4_fu_288_p0;
wire   [11:0] trunc_ln1118_4_fu_288_p1;
wire   [21:0] shl_ln1118_4_fu_292_p3;
wire  signed [21:0] sext_ln1118_4_fu_284_p1;
wire   [21:0] sub_ln1118_4_fu_300_p2;
wire  signed [19:0] sext_ln1118_5_fu_316_p0;
wire  signed [19:0] trunc_ln1118_5_fu_320_p0;
wire   [11:0] trunc_ln1118_5_fu_320_p1;
wire   [21:0] shl_ln1118_5_fu_324_p3;
wire  signed [21:0] sext_ln1118_5_fu_316_p1;
wire   [21:0] sub_ln1118_5_fu_332_p2;
wire  signed [19:0] sext_ln1118_6_fu_348_p0;
wire  signed [19:0] trunc_ln1118_6_fu_352_p0;
wire   [11:0] trunc_ln1118_6_fu_352_p1;
wire   [21:0] shl_ln1118_6_fu_356_p3;
wire  signed [21:0] sext_ln1118_6_fu_348_p1;
wire   [21:0] sub_ln1118_6_fu_364_p2;
wire  signed [19:0] sext_ln1118_7_fu_380_p0;
wire  signed [19:0] trunc_ln1118_7_fu_384_p0;
wire   [11:0] trunc_ln1118_7_fu_384_p1;
wire   [21:0] shl_ln1118_7_fu_388_p3;
wire  signed [21:0] sext_ln1118_7_fu_380_p1;
wire   [21:0] sub_ln1118_7_fu_396_p2;
wire  signed [19:0] sext_ln1118_8_fu_412_p0;
wire  signed [19:0] trunc_ln1118_8_fu_416_p0;
wire   [11:0] trunc_ln1118_8_fu_416_p1;
wire   [21:0] shl_ln1118_8_fu_420_p3;
wire  signed [21:0] sext_ln1118_8_fu_412_p1;
wire   [21:0] sub_ln1118_8_fu_428_p2;
wire  signed [19:0] sext_ln1118_9_fu_444_p0;
wire  signed [19:0] trunc_ln1118_9_fu_448_p0;
wire   [11:0] trunc_ln1118_9_fu_448_p1;
wire   [21:0] shl_ln1118_9_fu_452_p3;
wire  signed [21:0] sext_ln1118_9_fu_444_p1;
wire   [21:0] sub_ln1118_9_fu_460_p2;
wire  signed [19:0] sext_ln1118_10_fu_476_p0;
wire  signed [19:0] trunc_ln1118_10_fu_480_p0;
wire   [11:0] trunc_ln1118_10_fu_480_p1;
wire   [21:0] shl_ln1118_s_fu_484_p3;
wire  signed [21:0] sext_ln1118_10_fu_476_p1;
wire   [21:0] sub_ln1118_10_fu_492_p2;
wire  signed [19:0] sext_ln1118_11_fu_508_p0;
wire  signed [19:0] trunc_ln1118_11_fu_512_p0;
wire   [11:0] trunc_ln1118_11_fu_512_p1;
wire   [21:0] shl_ln1118_10_fu_516_p3;
wire  signed [21:0] sext_ln1118_11_fu_508_p1;
wire   [21:0] sub_ln1118_11_fu_524_p2;
wire  signed [19:0] sext_ln1118_12_fu_540_p0;
wire  signed [19:0] trunc_ln1118_12_fu_544_p0;
wire   [11:0] trunc_ln1118_12_fu_544_p1;
wire   [21:0] shl_ln1118_11_fu_548_p3;
wire  signed [21:0] sext_ln1118_12_fu_540_p1;
wire   [21:0] sub_ln1118_12_fu_556_p2;
wire  signed [19:0] sext_ln1118_13_fu_572_p0;
wire  signed [19:0] trunc_ln1118_13_fu_576_p0;
wire   [11:0] trunc_ln1118_13_fu_576_p1;
wire   [21:0] shl_ln1118_12_fu_580_p3;
wire  signed [21:0] sext_ln1118_13_fu_572_p1;
wire   [21:0] sub_ln1118_13_fu_588_p2;
wire  signed [19:0] sext_ln1118_14_fu_604_p0;
wire  signed [19:0] trunc_ln1118_14_fu_608_p0;
wire   [11:0] trunc_ln1118_14_fu_608_p1;
wire   [21:0] shl_ln1118_13_fu_612_p3;
wire  signed [21:0] sext_ln1118_14_fu_604_p1;
wire   [21:0] sub_ln1118_14_fu_620_p2;
reg   [19:0] ap_return_0_preg;
reg   [19:0] ap_return_1_preg;
reg   [19:0] ap_return_2_preg;
reg   [19:0] ap_return_3_preg;
reg   [19:0] ap_return_4_preg;
reg   [19:0] ap_return_5_preg;
reg   [19:0] ap_return_6_preg;
reg   [19:0] ap_return_7_preg;
reg   [19:0] ap_return_8_preg;
reg   [19:0] ap_return_9_preg;
reg   [19:0] ap_return_10_preg;
reg   [19:0] ap_return_11_preg;
reg   [19:0] ap_return_12_preg;
reg   [19:0] ap_return_13_preg;
reg   [19:0] ap_return_14_preg;
reg   [0:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_return_0_preg = 20'd0;
#0 ap_return_1_preg = 20'd0;
#0 ap_return_2_preg = 20'd0;
#0 ap_return_3_preg = 20'd0;
#0 ap_return_4_preg = 20'd0;
#0 ap_return_5_preg = 20'd0;
#0 ap_return_6_preg = 20'd0;
#0 ap_return_7_preg = 20'd0;
#0 ap_return_8_preg = 20'd0;
#0 ap_return_9_preg = 20'd0;
#0 ap_return_10_preg = 20'd0;
#0 ap_return_11_preg = 20'd0;
#0 ap_return_12_preg = 20'd0;
#0 ap_return_13_preg = 20'd0;
#0 ap_return_14_preg = 20'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 20'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_0_preg <= {{sub_ln1118_fu_172_p2[21:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 20'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_10_preg <= {{sub_ln1118_10_fu_492_p2[21:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 20'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_11_preg <= {{sub_ln1118_11_fu_524_p2[21:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 20'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_12_preg <= {{sub_ln1118_12_fu_556_p2[21:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 20'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_13_preg <= {{sub_ln1118_13_fu_588_p2[21:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 20'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_14_preg <= {{sub_ln1118_14_fu_620_p2[21:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 20'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_1_preg <= {{sub_ln1118_1_fu_204_p2[21:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 20'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_2_preg <= {{sub_ln1118_2_fu_236_p2[21:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 20'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_3_preg <= {{sub_ln1118_3_fu_268_p2[21:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 20'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_4_preg <= {{sub_ln1118_4_fu_300_p2[21:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 20'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_5_preg <= {{sub_ln1118_5_fu_332_p2[21:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 20'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_6_preg <= {{sub_ln1118_6_fu_364_p2[21:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 20'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_7_preg <= {{sub_ln1118_7_fu_396_p2[21:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 20'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_8_preg <= {{sub_ln1118_8_fu_428_p2[21:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 20'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_9_preg <= {{sub_ln1118_9_fu_460_p2[21:2]}};
        end
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_0 = {{sub_ln1118_fu_172_p2[21:2]}};
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_1 = {{sub_ln1118_1_fu_204_p2[21:2]}};
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_10 = {{sub_ln1118_10_fu_492_p2[21:2]}};
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_11 = {{sub_ln1118_11_fu_524_p2[21:2]}};
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_12 = {{sub_ln1118_12_fu_556_p2[21:2]}};
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_13 = {{sub_ln1118_13_fu_588_p2[21:2]}};
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_14 = {{sub_ln1118_14_fu_620_p2[21:2]}};
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_2 = {{sub_ln1118_2_fu_236_p2[21:2]}};
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_3 = {{sub_ln1118_3_fu_268_p2[21:2]}};
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_4 = {{sub_ln1118_4_fu_300_p2[21:2]}};
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_5 = {{sub_ln1118_5_fu_332_p2[21:2]}};
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_6 = {{sub_ln1118_6_fu_364_p2[21:2]}};
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_7 = {{sub_ln1118_7_fu_396_p2[21:2]}};
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_8 = {{sub_ln1118_8_fu_428_p2[21:2]}};
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_9 = {{sub_ln1118_9_fu_460_p2[21:2]}};
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign sext_ln1118_10_fu_476_p0 = p_read10;

assign sext_ln1118_10_fu_476_p1 = sext_ln1118_10_fu_476_p0;

assign sext_ln1118_11_fu_508_p0 = p_read11;

assign sext_ln1118_11_fu_508_p1 = sext_ln1118_11_fu_508_p0;

assign sext_ln1118_12_fu_540_p0 = p_read12;

assign sext_ln1118_12_fu_540_p1 = sext_ln1118_12_fu_540_p0;

assign sext_ln1118_13_fu_572_p0 = p_read13;

assign sext_ln1118_13_fu_572_p1 = sext_ln1118_13_fu_572_p0;

assign sext_ln1118_14_fu_604_p0 = p_read14;

assign sext_ln1118_14_fu_604_p1 = sext_ln1118_14_fu_604_p0;

assign sext_ln1118_1_fu_188_p0 = p_read1;

assign sext_ln1118_1_fu_188_p1 = sext_ln1118_1_fu_188_p0;

assign sext_ln1118_2_fu_220_p0 = p_read2;

assign sext_ln1118_2_fu_220_p1 = sext_ln1118_2_fu_220_p0;

assign sext_ln1118_3_fu_252_p0 = p_read3;

assign sext_ln1118_3_fu_252_p1 = sext_ln1118_3_fu_252_p0;

assign sext_ln1118_4_fu_284_p0 = p_read4;

assign sext_ln1118_4_fu_284_p1 = sext_ln1118_4_fu_284_p0;

assign sext_ln1118_5_fu_316_p0 = p_read5;

assign sext_ln1118_5_fu_316_p1 = sext_ln1118_5_fu_316_p0;

assign sext_ln1118_6_fu_348_p0 = p_read6;

assign sext_ln1118_6_fu_348_p1 = sext_ln1118_6_fu_348_p0;

assign sext_ln1118_7_fu_380_p0 = p_read7;

assign sext_ln1118_7_fu_380_p1 = sext_ln1118_7_fu_380_p0;

assign sext_ln1118_8_fu_412_p0 = p_read8;

assign sext_ln1118_8_fu_412_p1 = sext_ln1118_8_fu_412_p0;

assign sext_ln1118_9_fu_444_p0 = p_read9;

assign sext_ln1118_9_fu_444_p1 = sext_ln1118_9_fu_444_p0;

assign sext_ln1118_fu_156_p0 = p_read;

assign sext_ln1118_fu_156_p1 = sext_ln1118_fu_156_p0;

assign shl_ln1118_10_fu_516_p3 = {{trunc_ln1118_11_fu_512_p1}, {10'd0}};

assign shl_ln1118_11_fu_548_p3 = {{trunc_ln1118_12_fu_544_p1}, {10'd0}};

assign shl_ln1118_12_fu_580_p3 = {{trunc_ln1118_13_fu_576_p1}, {10'd0}};

assign shl_ln1118_13_fu_612_p3 = {{trunc_ln1118_14_fu_608_p1}, {10'd0}};

assign shl_ln1118_1_fu_196_p3 = {{trunc_ln1118_1_fu_192_p1}, {10'd0}};

assign shl_ln1118_2_fu_228_p3 = {{trunc_ln1118_2_fu_224_p1}, {10'd0}};

assign shl_ln1118_3_fu_260_p3 = {{trunc_ln1118_3_fu_256_p1}, {10'd0}};

assign shl_ln1118_4_fu_292_p3 = {{trunc_ln1118_4_fu_288_p1}, {10'd0}};

assign shl_ln1118_5_fu_324_p3 = {{trunc_ln1118_5_fu_320_p1}, {10'd0}};

assign shl_ln1118_6_fu_356_p3 = {{trunc_ln1118_6_fu_352_p1}, {10'd0}};

assign shl_ln1118_7_fu_388_p3 = {{trunc_ln1118_7_fu_384_p1}, {10'd0}};

assign shl_ln1118_8_fu_420_p3 = {{trunc_ln1118_8_fu_416_p1}, {10'd0}};

assign shl_ln1118_9_fu_452_p3 = {{trunc_ln1118_9_fu_448_p1}, {10'd0}};

assign shl_ln1118_s_fu_484_p3 = {{trunc_ln1118_10_fu_480_p1}, {10'd0}};

assign shl_ln_fu_164_p3 = {{trunc_ln1118_fu_160_p1}, {10'd0}};

assign sub_ln1118_10_fu_492_p2 = ($signed(shl_ln1118_s_fu_484_p3) - $signed(sext_ln1118_10_fu_476_p1));

assign sub_ln1118_11_fu_524_p2 = ($signed(shl_ln1118_10_fu_516_p3) - $signed(sext_ln1118_11_fu_508_p1));

assign sub_ln1118_12_fu_556_p2 = ($signed(shl_ln1118_11_fu_548_p3) - $signed(sext_ln1118_12_fu_540_p1));

assign sub_ln1118_13_fu_588_p2 = ($signed(shl_ln1118_12_fu_580_p3) - $signed(sext_ln1118_13_fu_572_p1));

assign sub_ln1118_14_fu_620_p2 = ($signed(shl_ln1118_13_fu_612_p3) - $signed(sext_ln1118_14_fu_604_p1));

assign sub_ln1118_1_fu_204_p2 = ($signed(shl_ln1118_1_fu_196_p3) - $signed(sext_ln1118_1_fu_188_p1));

assign sub_ln1118_2_fu_236_p2 = ($signed(shl_ln1118_2_fu_228_p3) - $signed(sext_ln1118_2_fu_220_p1));

assign sub_ln1118_3_fu_268_p2 = ($signed(shl_ln1118_3_fu_260_p3) - $signed(sext_ln1118_3_fu_252_p1));

assign sub_ln1118_4_fu_300_p2 = ($signed(shl_ln1118_4_fu_292_p3) - $signed(sext_ln1118_4_fu_284_p1));

assign sub_ln1118_5_fu_332_p2 = ($signed(shl_ln1118_5_fu_324_p3) - $signed(sext_ln1118_5_fu_316_p1));

assign sub_ln1118_6_fu_364_p2 = ($signed(shl_ln1118_6_fu_356_p3) - $signed(sext_ln1118_6_fu_348_p1));

assign sub_ln1118_7_fu_396_p2 = ($signed(shl_ln1118_7_fu_388_p3) - $signed(sext_ln1118_7_fu_380_p1));

assign sub_ln1118_8_fu_428_p2 = ($signed(shl_ln1118_8_fu_420_p3) - $signed(sext_ln1118_8_fu_412_p1));

assign sub_ln1118_9_fu_460_p2 = ($signed(shl_ln1118_9_fu_452_p3) - $signed(sext_ln1118_9_fu_444_p1));

assign sub_ln1118_fu_172_p2 = ($signed(shl_ln_fu_164_p3) - $signed(sext_ln1118_fu_156_p1));

assign trunc_ln1118_10_fu_480_p0 = p_read10;

assign trunc_ln1118_10_fu_480_p1 = trunc_ln1118_10_fu_480_p0[11:0];

assign trunc_ln1118_11_fu_512_p0 = p_read11;

assign trunc_ln1118_11_fu_512_p1 = trunc_ln1118_11_fu_512_p0[11:0];

assign trunc_ln1118_12_fu_544_p0 = p_read12;

assign trunc_ln1118_12_fu_544_p1 = trunc_ln1118_12_fu_544_p0[11:0];

assign trunc_ln1118_13_fu_576_p0 = p_read13;

assign trunc_ln1118_13_fu_576_p1 = trunc_ln1118_13_fu_576_p0[11:0];

assign trunc_ln1118_14_fu_608_p0 = p_read14;

assign trunc_ln1118_14_fu_608_p1 = trunc_ln1118_14_fu_608_p0[11:0];

assign trunc_ln1118_1_fu_192_p0 = p_read1;

assign trunc_ln1118_1_fu_192_p1 = trunc_ln1118_1_fu_192_p0[11:0];

assign trunc_ln1118_2_fu_224_p0 = p_read2;

assign trunc_ln1118_2_fu_224_p1 = trunc_ln1118_2_fu_224_p0[11:0];

assign trunc_ln1118_3_fu_256_p0 = p_read3;

assign trunc_ln1118_3_fu_256_p1 = trunc_ln1118_3_fu_256_p0[11:0];

assign trunc_ln1118_4_fu_288_p0 = p_read4;

assign trunc_ln1118_4_fu_288_p1 = trunc_ln1118_4_fu_288_p0[11:0];

assign trunc_ln1118_5_fu_320_p0 = p_read5;

assign trunc_ln1118_5_fu_320_p1 = trunc_ln1118_5_fu_320_p0[11:0];

assign trunc_ln1118_6_fu_352_p0 = p_read6;

assign trunc_ln1118_6_fu_352_p1 = trunc_ln1118_6_fu_352_p0[11:0];

assign trunc_ln1118_7_fu_384_p0 = p_read7;

assign trunc_ln1118_7_fu_384_p1 = trunc_ln1118_7_fu_384_p0[11:0];

assign trunc_ln1118_8_fu_416_p0 = p_read8;

assign trunc_ln1118_8_fu_416_p1 = trunc_ln1118_8_fu_416_p0[11:0];

assign trunc_ln1118_9_fu_448_p0 = p_read9;

assign trunc_ln1118_9_fu_448_p1 = trunc_ln1118_9_fu_448_p0[11:0];

assign trunc_ln1118_fu_160_p0 = p_read;

assign trunc_ln1118_fu_160_p1 = trunc_ln1118_fu_160_p0[11:0];

endmodule //normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s
